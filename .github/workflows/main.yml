name: Build and Deploy to Azure Functions
on:
  push:
    branches-ignore:
      - main

permissions:
  id-token: write

env:
  APPNAME: ${{ github.actor }}-demo-functions
  APPLICATIONPATH: app
  ARMTEMPLATE_PATH: .arm
  RESOURCEGROUPNAME: ${{ github.actor }}-demo-rg
  LOCATION: Japan East
  HOSTINGPLAN: ${{ github.actor }}-demo
  STORAGEACCOUNTNAME: ${{ github.actor }}demo
  APPINSIGHTSLOCATION: Japan East
  NODE_VERSION: '16.x'
  SKU: Dynamic Y1

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.1.0
      with:
        token: ${{secrets.MY_GITHUB_TOKEN}}

    # Setup Node
    - name: Use Node ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3.5.1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependancies and build app
      continue-on-error: false
      run: |
        cd ${{ env.APPLICATIONPATH }}
        npm install

    # Run Unit Tests
    - name: Run unit tests with coverage
      continue-on-error: false
      run: |
        cd ${{ env.APPLICATIONPATH }}
        npm run test -- --coverage

    - name: Make directories for artifact upload
      continue-on-error: false
      run: |
        mkdir buildartifacts
        mkdir deploymenttemplates

    # Upload Coverage Report
    - name: Upload Coverage Report
      continue-on-error: true
      uses: actions/upload-artifact@v3.1.1
      with:
        name: coverage-report
        path: ./${{ env.APPLICATIONPATH }}/coverage

    # Archive build artifact
    - name: Archive Application
      run: |
        zip -qq -r ./buildartifacts/Application.zip ./${{ env.APPLICATIONPATH }} --exclude \*/__test__/\* \*/coverage/\* \*/package.json \*/package-lock.json

    # Uploading application to artifact store
    - name: Upload Application to Build Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v3.1.1
      with:
        name: buildartifacts
        path: buildartifacts

    # Archive Arm template
    - name: Archive ArmTemplates
      run: |
        zip -qq -r ./deploymenttemplates/ArmTemplates.zip ./${{ env.ARMTEMPLATE_PATH }}

    # Uploading Arm Template to artifact store
    - name: Upload Arm templates to Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v3.1.1
      with:
        name: deploymenttemplates
        path: deploymenttemplates

  deploy:
    name: Deploy application to Azure Function App
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Login to Azure
      uses: azure/login@v1.4.6
      continue-on-error: false
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTIONID }}
    - name: 'Install Azure Function App CLI'
      run: |
        sudo apt-get update
        sudo apt-get install azure-functions-core-tools-3

    - name: Download Build Artifact
      uses: actions/download-artifact@v3
      continue-on-error: false
      with:
        name: buildartifacts
        path: buildartifacts

    - name: Unzipping Build Artifact
      run: |
        unzip -qq ./buildartifacts/Application.zip -d .

    - name: Download Arm Template
      uses: actions/download-artifact@v3
      continue-on-error: false
      with:
        name: deploymenttemplates
        path: deploymenttemplates

    - name: Unzipping ARM template
      run: |
        unzip -qq ./deploymenttemplates/ArmTemplates.zip -d .

    - name: Deploy ARM Template
      uses: azure/arm-deploy@v1
      id: deploy
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.SUBSCRIPTIONID }}
        resourceGroupName: ${{ env.RESOURCEGROUPNAME }}
        template: ./"${{ env.ARMTEMPLATE_PATH }}"/arm-template.json
        parameters: functionAppName="${{ env.APPNAME }}" hostingPlanName="${{ env.HOSTINGPLAN }}" appInsightLocation="${{ env.APPINSIGHTSLOCATION }}" storageAccountName="${{ env.STORAGEACCOUNTNAME }}" sku="${{ env.SKU }}"

    # Deploy the Function app to Azure Functions
    - name: 'Deploy to Azure Function'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.APPNAME }}
        package: ${{ env.APPLICATIONPATH }}

    - name: Finalizing
      run: |
        echo -e "\033[1;32mPlease use Azure portal or Azure Functions Core Tools to fetch url with keys to invoke the Azure function(s)\033[m"
        echo "func azure functionapp list-functions ${{ env.APPNAME }} --show-keys"
        echo "It may take upto 10 minutes for the function list to update"
        func azure functionapp list-functions ${{ env.APPNAME }}
