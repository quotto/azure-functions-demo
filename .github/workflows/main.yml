name: Azure Functions Demo Deploy
on:
  push:
permissions:
  id-token: write
env:
  RESOURCEGROUPNAME: ${{ github.actor }}-demo-rg
  APPDIR: app
  API_VERSION: v1.2
jobs:
  prebuild:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-environment.outputs.environment }}
      slot: ${{ steps.set-environment.outputs.slot }}
      appname: ${{ steps.set-environment.outputs.appname}}
    steps:
      - id: set-environment
        run: |
          APPNAME=${GITHUB_ACTOR}-demo-functions
          if [ $GITHUB_REF_NAME == "release" ]; then
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "slot=stage" >> $GITHUB_OUTPUT
          else
            echo "environment=development" >> $GITHUB_OUTPUT
            HASH_VAL=$(echo ${GITHUB_REF} | sha256sum)
            APPNAME=${APPNAME}-${HASH_VAL:0:8}
          fi
          echo "APPNAME=${APPNAME}" >> $GITHUB_OUTPUT
  test:
    if: ${{!startsWith(github.ref, 'refs/heads/main')}}
    runs-on: ubuntu-latest
    environment: ${{ needs.prebuild.outputs.environment }}
    steps:
    - uses: actions/checkout@v3.1.0
      with:
          token: ${{secrets.MY_GITHUB_TOKEN}}
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.5.1
      with:
        # Set always-auth in npmrc.
        always-auth: false
        # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
        node-version: 16.x
    - name: Build
      run: |
        cd ${{ env.APPDIR }}
        npm install
    - name: Test
      run: |
        cd ${{ env.APPDIR }}
        npm run test
    - name: Archive coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: ${{ env.APPDIR }}/coverage
    - name: Failure notification
      uses: rtCamp/action-slack-notify@v2
      if: ${{ failure() }}
      env:
        SLACK_WEBHOOK:    ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_COLOR:      '#dc143c'  # 赤色の枠で通知が届く
        SLACK_MESSAGE:     |
          処理に失敗しました。
          ログを確認してください。
  build:
    if: ${{!startsWith(github.ref, 'refs/heads/main')}}
    runs-on: ubuntu-latest
    needs:
      - prebuild
      - test
    environment: ${{ needs.prebuild.outputs.environment }}
    steps:
    - uses: actions/checkout@v3.1.0
      with:
          token: ${{secrets.MY_GITHUB_TOKEN}}
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.5.1
      with:
        # Set always-auth in npmrc.
        always-auth: false
        # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
        node-version: 16.x
    - name: Build
      run: |
        cd ${{ env.APPDIR }}
        npm install --omit=production
        npm run build
    - name: Login to Azure
      uses: azure/login@v1.4.6
      continue-on-error: false
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTIONID }}
    - name: Deploy
      uses: Azure/functions-action@v1.4.8
      with:
        # Name of the Azure Function App
        app-name: ${{ needs.prebuild.outputs.appname }}
        # Path to package or folder. *.zip or a folder to deploy
        package: ${{ env.APPDIR }}
        slot-name: ${{ needs.prebuild.outputs.slot }}
    - name: Set appsettings
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          if [ ${{ github.ref }} == "refs/heads/release" ]; then
            SLOT_OPTIONS="--slot ${{ needs.prebuild.outputs.slot }}"
          fi
          az functionapp config appsettings set --name ${{ needs.prebuild.outputs.appname }} --resource-group ${{ env.RESOURCEGROUPNAME }} --settings "API_VERSION=${{ env.API_VERSION }}" ${SLOT_OPTIONS}
    - name: Failure notification
      uses: rtCamp/action-slack-notify@v2
      if: ${{ failure() }}
      env:
        SLACK_WEBHOOK:    ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_COLOR:      '#dc143c'  # 赤色の枠で通知が届く
        SLACK_MESSAGE:     |
          処理に失敗しました。
          ログを確認してください。

    - name: Succsess notification
      uses: rtCamp/action-slack-notify@v2
      if: ${{ success() }}
      env:
        SLACK_WEBHOOK:    ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_MESSAGE: |
          処理に成功しました。
  swap-slot:
    runs-on: ubuntu-22.04
    needs:
      - prebuild
    environment: production
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - name: Login to Azure
      uses: azure/login@v1.4.6
      continue-on-error: false
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTIONID }}
    - name: Swap deploy slot
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          az functionapp deployment slot swap --slot stage --name ${{ needs.prebuild.outputs.appname }} --resource-group ${{ env.RESOURCEGROUPNAME }}
    - name: Failure notification
      uses: rtCamp/action-slack-notify@v2
      if: ${{ failure() }}
      env:
        SLACK_WEBHOOK:    ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_COLOR:      '#dc143c'  # 赤色の枠で通知が届く
        SLACK_MESSAGE:     |
          処理に失敗しました。
          ログを確認してください。

    - name: Succsess notification
      uses: rtCamp/action-slack-notify@v2
      if: ${{ success() }}
      env:
        SLACK_WEBHOOK:    ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_MESSAGE: |
          処理に成功しました。